before_script:
  - export CURRENT_BUILD_PATH=$(pwd)
  - export GOPATH=$(pwd)
  - export GOROOT=$HOME/golang/go
  - export GOPATH=$HOME/gopath
  - export PATH=$PATH:$GOROOT/bin
  - export PATH=$PATH:$GOPATH/bin

stages:
  - environment
  - build
  - test

prepare-gopath:
  stage: environment
  script:
    - echo $PATH
    - rm -rf $HOME/gopath
    - mkdir -p $HOME/golang
    - mkdir -p $HOME/gopath
    - (if [[ "$(go version)" == *"go version go1.7"* ]]; then echo "âœ“ Go binary installed!"; else echo "Go binary not installed"; exit -1; fi);
    - go version
    - echo $PATH
    - go env
    - which go

build-datapipeline:
  stage: build
  script:
    - cd $CURRENT_BUILD_PATH
    - pwd
    - mkdir -p $GOPATH/src
    - cp -r $CURRENT_BUILD_PATH $GOPATH/src/datapipeline/ #copy checkout to gopath so we can build it within the gopath
    - make
    - make lint
test-datapipeline:
  stage: test
  script:
    - pwd
    - cd $CURRENT_BUILD_PATH
    - make test
